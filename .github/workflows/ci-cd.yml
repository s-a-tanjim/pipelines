name: CI-CD Test

on:
  push:
  #   branches: [ "main" ]
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
        type: choice
        options:
        - info
        - warning
        - debug
      tags:
        description: 'Test scenario tags'
        required: false
        type: boolean
      environment:
        description: 'Environment to run tests against'
        type: environment
        required: true

env:
  TEST_ENV: test
  AWS_REGION: ${{ vars.PROD_AWS_REGION || 'us-east-1' }}


jobs:
  build_image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set release version as tag
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          echo $GITHUB_REF | grep -oP 'refs/tags/\K.*' | sed 's/^/RELEASE_VERSION=/' >> $GITHUB_ENV

      - name: Set commit hash as tag
        if: ${{ !startsWith(github.ref, 'refs/tags/v') }}
        run: |
          GIT_HASH=$(git ls-remote https://github.com/s-a-tanjim/pipelines)
          echo RELEASE_VERSION=${GIT_HASH:0:7} >> $GITHUB_ENV

      - name: Build Docker Image
        env:
          IMAGE_TAG: ${{ env.RELEASE_VERSION }}
        run: |
          docker build --file Dockerfile -t $IMAGE_TAG .
          docker save -o /tmp/$IMAGE_TAG.tar $IMAGE_TAG

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.RELEASE_VERSION }}
          path: /tmp/${{ env.RELEASE_VERSION }}.tar
          retention-days: 1
    outputs:
      RELEASE_VERSION: ${{ env.RELEASE_VERSION }}
      TEST_ENV: ${{ env.TEST_ENV }}
      AWS_REGION: ${{ env.AWS_REGION }}

  test_env_job:
    name: Test Env Job
    runs-on: ubuntu-latest
    needs: build_image
    environment:
      name: "development"
      url: https://github.com

    steps:
      - name: Echo
        run: echo This is test


  prod_job:
    name: Prod Env Job
    runs-on: ubuntu-latest
    needs: build_image
    environment:
      name: "production"
      url: https://github.com

    steps:
      - name: Echo
        run: echo This is prod
